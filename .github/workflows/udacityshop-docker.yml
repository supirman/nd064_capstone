name: Uda'CityShop [latest tag] - Package with Docker

on:
  push:
    branches:
      - 'master'
    paths:
      - 'src/**'

jobs:
  paths: 
    runs-on: ubuntu-latest
    outputs: 
      adservice: ${{ steps.filter.outputs.adservice }}
      adservice-v2: ${{ steps.filter.outputs.adservice-v2 }}
      currencyservice: ${{ steps.filter.outputs.currencyservice }}
      frontend: ${{ steps.filter.outputs.frontend }}
      productcatalogservice: ${{ steps.filter.outputs.productcatalogservice }}
    steps:
      - uses: actions/checkout@v2
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            adservice:
              - 'src/adservice/**'
            adservice-v2:
              - 'src/adservice-v2/**'
            currencyservice:
              - 'src/currencyservice/**'
            frontend:
              - 'src/frontend/**'
            productcatalogservice:
              - 'src/productcatalogservice/**'
            
            
  adservice:
    needs: paths
    if: needs.paths.outputs.adservice == 'true'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: src/adservice/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/adservice:latest

  adservice-v2:
    needs: paths
    if: needs.paths.outputs.adservice-v2 == 'true'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: src/adservice-v2/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/adservice-v2:latest

  currencyservice:
    needs: paths
    if: needs.paths.outputs.currencyservice == 'true'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: src/currencyservice/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/currencyservice:latest

  frontend:
    needs: paths
    if: needs.paths.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: src/frontend/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  productcatalogservice:
    needs: paths
    if: needs.paths.outputs.productcatalogservice == 'true'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: src/productcatalogservice/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/productcatalogservice:latest
